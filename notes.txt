0:deleted
1:add cargo
2:add and rem cargo
3:add and rem emp -> rankups
4:admin -> rankups




DELIMITER $$

CREATE TRIGGER make_gain_create
AFTER INSERT
ON cargo FOR EACH ROW
BEGIN
    IF new.cargo_count > 0 THEN
        INSERT INTO gains(cargo_id, counter, gain_status) VALUES(new.id, new.cargo_count, '1');
    END IF;
END$$
DELIMITER ;


DELIMITER $$

CREATE TRIGGER make_gain_update
AFTER UPDATE
ON cargo FOR EACH ROW
BEGIN
    IF new.cargo_count > old.cargo_count THEN
        INSERT INTO gains(cargo_id, counter, gain_status) VALUES(new.id, (new.cargo_count-old.cargo_count), '1');
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER make_bills_insert
BEFORE INSERT
ON bills FOR EACH ROW
BEGIN
SET @val = 0;
SELECT cargo_count INTO @val FROM cargo WHERE id = new.cargo_id LIMIT 1;
    IF @val >= new.counter THEN
     update cargo set cargo_count = cargo_count - new.counter  where id = new.cargo_id ;
     ELSE
     SIGNAL SQLSTATE '66420' SET MESSAGE_TEXT = 'Warning: the cargo selected don\'t have enough stock ';
    END IF;
END$$
DELIMITER ;




user log in see garages
open grage see rank
and cargos
add cargo
open cargo
see bills and gains
bills pack in bills

check db stock >0

ALTER TABLE cargo ADD CHECK (cargo_count >= 0);


DELIMITER $$
CREATE TRIGGER make_bills_insert
BEFORE INSERT
ON bills FOR EACH ROW
BEGIN
SET @val = 0;
SELECT cargo_count INTO @val FROM cargo WHERE id = new.cargo_id LIMIT 1;
    IF new.counter > @val THEN
     update cargo set cargo_count = cargo_count - new.counter  where id = new.cargo_id ;
     ELSE
     SIGNAL SQLSTATE '66420' SET MESSAGE_TEXT = 'Warning: the cargo selected don\'t have enough stock ';
    END IF;
END$$
DELIMITER ;

right list of compnys by new


drop TRIGGER make_bills_insert;
DELIMITER $$
CREATE TRIGGER make_bills_insert
BEFORE INSERT
ON bills FOR EACH ROW
BEGIN
SET @val = 0;
SELECT cargo_count INTO @val FROM cargo WHERE id = new.cargo_id LIMIT 1;
    IF @val >= new.counter THEN
     update cargo set cargo_count = cargo_count - new.counter  where id = new.cargo_id ;
     ELSE
     SIGNAL SQLSTATE '66420' SET MESSAGE_TEXT = 'Warning: the cargo selected don\'t have enough stock ';
    END IF;
END$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER make_gains_insert
BEFORE INSERT
ON gains FOR EACH ROW
BEGIN
   update cargo set cargo_count = cargo_count + new.counter  where id = new.cargo_id ;
END$$
DELIMITER ;



      <Files ~ "\.inc$">
        Order Allow,Deny
        Deny from All
    </Files>
    RewriteEngine On
    RedirectMatch 404 /\..*$
    RedirectMatch 404 /*\.json$
    RedirectMatch 404 /*\.example$
    RedirectMatch 404 /*\.md$
    #RedirectMatch 404 /*\.php$
    RedirectMatch 404 /*\.blade.php$
    RedirectMatch 404 ^/storage/framework/?$
    RedirectMatch 404 /*\.log$
    RedirectMatch 404 ^\/storage\/framework\/sessions\/\w*$
    RedirectMatch 404 ^\/storage\/framework\/views\/\w*$
    RedirectMatch 404 /*\.mix.js$
    RedirectMatch 404 /*\.xml$
    RedirectMatch 404 /*\.yaml$
    RedirectMatch 404 /*\.lock$
    RedirectMatch 404 /artisan$
    RedirectMatch 404 /*\.sql$
    #RedirectMatch 404 /*\.js$
    #RedirectMatch 404 /*\.css$


    ALTER TABLE gestion_stock.operation
  ADD COLUMN bill_id bigint(20) ,
  ADD FOREIGN KEY fk_bill(bill_id) REFERENCES bill(id) ON DELETE CASCADE;



drop TABLE bill;

CREATE TABLE `bill` (
  `id` bigint(20) UNSIGNED NOT NULL PRIMARY KEY,
  `user_id` bigint(20) UNSIGNED NOT NULL,
  `direction` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `bill_price` double(8,2) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
) ;


ALTER TABLE `cargo`
  ADD COLUMN `user_id` bigint(20) UNSIGNED NOT NULL;




SET FOREIGN_KEY_CHECKS=0;
ALTER TABLE gestion_stock.`operation` ADD FOREIGN KEY (bill_id) REFERENCES bill(id);



ALTER TABLE `bill`
  ADD COLUMN `garage_id` bigint(20) UNSIGNED NOT NULL;


ALTER TABLE gestion_stock.`bill` ADD FOREIGN KEY (garage_id) REFERENCES garage(id);
